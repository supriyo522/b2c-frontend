var OTP_ENCRYPT_PAYLOAD_MT = {
        generateUniqueToken: function() {
            const e = (new Date).getTime(),
                n = Math.floor(1e6 * Math.random()),
                t = `${e}${n}`;
            return t
        },
        generateSessionToken: function() {
            const e = OTP_ENCRYPT_PAYLOAD_MT.generateUniqueToken(),
                n = (new Date).getTime() + 18e5;
            return {
                token: e,
                expirationTime: n
            }
        },
        isTokenValid: function(e) {
            return e && e.expirationTime > (new Date).getTime()
        },
        encryptDataMethod: function(e) {
            const n = CryptoJS.AES.encrypt(JSON.stringify(e), MT_OTP_ENCRYPTED_DATA_AUTH_TOKEN_VAL).toString();
            return n
        },
        getToken: function() {
            return JSON.parse(localStorage.getItem("sessionToken") || "")
        },
        sendEncryptedData: function(e) {
            var n = OTP_ENCRYPT_PAYLOAD_MT.getToken(),
                t = { ...JSON.parse(e),
                    key: MT_OTP_ENCRYPTED_DATA_KEY_VAL,
                    expirationTime: n.expirationTime,
                    extraToken: n.token
                },
                o = OTP_ENCRYPT_PAYLOAD_MT.encryptDataMethod(t),
                T = "true";
            return JSON.stringify({
                data: o,
                dataFlag: T
            })
        }
    },
    sessionTokenInfo = OTP_ENCRYPT_PAYLOAD_MT.generateSessionToken();
localStorage.setItem("sessionToken", JSON.stringify(sessionTokenInfo));