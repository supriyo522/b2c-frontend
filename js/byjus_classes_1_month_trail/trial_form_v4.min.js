(function() {
    function e(e) {
        var t = e % 10,
            a = e % 100;
        return 1 == t && 11 != a ? parseInt(e) + "st" : 2 == t && 12 != a ? parseInt(e) + "nd" : 3 == t && 13 != a ? parseInt(e) + "rd" : parseInt(e) + "th"
    }
    $("#ftc-submit-text-online-flow").hide(), $(".doubt-offline-thanku-modal").hide(), $("#exampleFTCModal").hide(), $("#schedule-online-session-btn-no-center").hide(), $(".note-center-unavailable").hide(), $(".online").click(function() {
        $("#ftc-grade-selection-section").hide(), $("#ftc-submit-text-offline-flow").hide(), $("#ftc-submit-text-online-flow").show(), o.setStates($("[data-state]")), document.getElementById("free-trial-classes-form-id").reset(), $(".input-error-msg").hide(), o.resetFTCFields()
    }), $(".offline").click(function() {
        $("#ftc-grade-selection-section").show(), $("#ftc-submit-text-online-flow").hide(), $("#ftc-submit-text-offline-flow").show(), o.setStatesOffline($("[data-state]")), document.getElementById("free-trial-classes-form-id").reset(), $(".input-error-msg").hide(), o.resetFTCFields()
    });
    var t, a = /constructor/i.test(window.HTMLElement) || (t = !window.safari || safari.pushNotification, "[object SafariRemoteNotification]" === t.toString());
    $(".modal-close").click(function() {
        $(".doubt-offline-thanku-modal").hide(), $(".modal-ftc-step-1").hide(), $(".trial-form .form-control.input-valid").css("border-color", "#BCBCBC"), document.getElementById("ftc-offline-form-id").reset(), document.getElementById("free-trial-classes-form-id").reset(), $(".input-error-msg").hide(), $("body").toggleClass("modal-ftc-open"), o.resetFTCFields(), $(".header").css({
            "z-index": 1030
        })
    }), $("#ftcOfflineScheduleClass").click(function() {
        var e = o.validateFormFields("free-trial-classes", "onDirect"),
            t = $("[name=free-trial-classes]"),
            i = "free-trial-classes";
        if (o.validatedFormFieldsValues[i].isProfileOptionEnabled && !o.validatedFormFieldsValues[i].profileId) return t.find("[data-profiles]").removeClass("input-error").addClass("input-error"), t.find("[data-profiles]").siblings(".input-error-msg").remove(), void t.find("[data-profiles]").after('<div class="input-error-msg">Please choose your profile.</div>');
        if (t.find("[data-grades]").val() || (t.find("[data-grades]").removeClass("input-error").addClass("input-error"), t.find("[data-grades]").siblings(".input-error-msg").remove(), t.find("[data-grades]").after('<div class="input-error-msg">Please select your class.</div>')), e && t.find("[data-grades]").val()) {
            $('[name="grade"]').addClass("input-valid"), $('[name="grade"]').removeClass("input-error"), $(".header").css({
                "z-index": 1012
            });
            var s = new Date;
            s = s.toJSON(), s = s.slice(0, 10);
            var r = new Date(Date.now() + 6048e5);
            r = r.toJSON(), r = r.slice(0, 10);
            const e = document.querySelector('[name="date-offline"]');
            e.setAttribute("min", s), e.setAttribute("max", r), a && ($(".ftc-date-offline-field .input-error-msg").hide(), $(".ftc-date-field-note").html("You can schedule session within a week")), $('[name="center-offline"]').html("Select Centre"), $('[name="center-offline"]').attr("disabled", !0), $('[name="center-offline"]').removeClass("input-valid"), $('[name="slot-offline"]').html("Choose Time Slot"), $('[name="slot-offline"]').attr("disabled", !0), $('[name="slot-offline"]').removeClass("input-valid"), $('[name="class-offline"]').val($('[name="grade"]').val()), $("body").toggleClass("modal-ftc-open"), $("#exampleFTCModal").show(), o.onClickContinueSchedule("free-trial-classes")
        }
    }), cleverTapProdTrigger("pageview_Homepage");
    var i = {
            apis: {
                allStatesUnderIndia: BCAP_API_BASE_URL + "api/geo_dimensions/india_state_list_non_paginated",
                sendOtp: BCAS_API_BASE_URL + "api/acs/v2/send-otp",
                verifyOtp: BCAS_API_BASE_URL + "api/acs/v2/verify-otp",
                voiceOtp: BCAS_API_BASE_URL + "api/acs/voice",
                getUserProfile: BCAS_API_BASE_URL + "api/acs/get-user-profiles",
                selectCohort: BCAS_API_BASE_URL + "api/acs/select-cohort",
                topicsAndTimeSlots: BCAS_API_BASE_URL + "api/acs/cohort",
                register: BCAS_API_BASE_URL + "api/acs/v2/register",
                storeProfileId: BCAS_API_BASE_URL + "api/store-profile-id",
                airtelApiConversion: BASE_URL + "wp-json/spidy/v1/airtel_api_conversion/?wp-json_allow",
                tllmsApi: "https://api.tllms.com/1/stats/web/web.counter",
                states: BCAS_API_BASE_URL + "api/bms/state",
                cityByState: BCAS_API_BASE_URL + "api/bms/city-by-state?stateId=",
                centerByCity: BCAS_API_BASE_URL + "api/bms/center?city="
            },
            messages: {
                somethingWentWrong: "Something went wrong. Please try after some time"
            }
        },
        s = function(e) {
            "use strict";

            function t(e, t) {
                return e(t = {
                    exports: {}
                }, t.exports), t.exports
            }
            e = e && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
            var a = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {},
                i = t(function(t, i) {
                    var s;
                    t.exports = (s = function(t) {
                        function i() {}
                        var s;
                        if ("undefined" != typeof window && window.crypto && (s = window.crypto), !s && "undefined" != typeof window && window.msCrypto && (s = window.msCrypto), !s && void 0 !== a && a.crypto && (s = a.crypto), !s) try {
                            s = e
                        } catch (o) {}
                        var r = Object.create || function(e) {
                                var t;
                                return i.prototype = e, t = new i, i.prototype = null, t
                            },
                            o = {},
                            n = o.lib = {},
                            d = n.Base = {
                                extend: function(e) {
                                    var t = r(this);
                                    return e && t.mixIn(e), t.hasOwnProperty("init") && this.init !== t.init || (t.init = function() {
                                        t.$super.init.apply(this, arguments)
                                    }), (t.init.prototype = t).$super = this, t
                                },
                                create: function() {
                                    var e = this.extend();
                                    return e.init.apply(e, arguments), e
                                },
                                init: function() {},
                                mixIn: function(e) {
                                    for (var t in e) e.hasOwnProperty(t) && (this[t] = e[t]);
                                    e.hasOwnProperty("toString") && (this.toString = e.toString)
                                },
                                clone: function() {
                                    return this.init.prototype.extend(this)
                                }
                            },
                            l = n.WordArray = d.extend({
                                init: function(e, t) {
                                    e = this.words = e || [], this.sigBytes = null != t ? t : 4 * e.length
                                },
                                toString: function(e) {
                                    return (e || f).stringify(this)
                                },
                                concat: function(e) {
                                    var t = this.words,
                                        a = e.words,
                                        i = this.sigBytes,
                                        s = e.sigBytes;
                                    if (this.clamp(), i % 4)
                                        for (var r = 0; r < s; r++) {
                                            var o = a[r >>> 2] >>> 24 - r % 4 * 8 & 255;
                                            t[i + r >>> 2] |= o << 24 - (i + r) % 4 * 8
                                        } else
                                            for (r = 0; r < s; r += 4) t[i + r >>> 2] = a[r >>> 2];
                                    return this.sigBytes += s, this
                                },
                                clamp: function() {
                                    var e = this.words,
                                        a = this.sigBytes;
                                    e[a >>> 2] &= 4294967295 << 32 - a % 4 * 8, e.length = t.ceil(a / 4)
                                },
                                clone: function() {
                                    var e = d.clone.call(this);
                                    return e.words = this.words.slice(0), e
                                },
                                random: function(e) {
                                    for (var t = [], a = 0; a < e; a += 4) t.push(function() {
                                        if (s) {
                                            if ("function" == typeof s.getRandomValues) try {
                                                return s.getRandomValues(new Uint32Array(1))[0]
                                            } catch (e) {}
                                            if ("function" == typeof s.randomBytes) try {
                                                return s.randomBytes(4).readInt32LE()
                                            } catch (e) {}
                                        }
                                        throw new Error("Native crypto module could not be used to get secure random number.")
                                    }());
                                    return new l.init(t, e)
                                }
                            }),
                            c = o.enc = {},
                            f = c.Hex = {
                                stringify: function(e) {
                                    for (var t = e.words, a = e.sigBytes, i = [], s = 0; s < a; s++) {
                                        var r = t[s >>> 2] >>> 24 - s % 4 * 8 & 255;
                                        i.push((r >>> 4).toString(16)), i.push((15 & r).toString(16))
                                    }
                                    return i.join("")
                                },
                                parse: function(e) {
                                    for (var t = e.length, a = [], i = 0; i < t; i += 2) a[i >>> 3] |= parseInt(e.substr(i, 2), 16) << 24 - i % 8 * 4;
                                    return new l.init(a, t / 2)
                                }
                            },
                            u = c.Latin1 = {
                                stringify: function(e) {
                                    for (var t = e.words, a = e.sigBytes, i = [], s = 0; s < a; s++) {
                                        var r = t[s >>> 2] >>> 24 - s % 4 * 8 & 255;
                                        i.push(String.fromCharCode(r))
                                    }
                                    return i.join("")
                                },
                                parse: function(e) {
                                    for (var t = e.length, a = [], i = 0; i < t; i++) a[i >>> 2] |= (255 & e.charCodeAt(i)) << 24 - i % 4 * 8;
                                    return new l.init(a, t)
                                }
                            },
                            m = c.Utf8 = {
                                stringify: function(e) {
                                    try {
                                        return decodeURIComponent(escape(u.stringify(e)))
                                    } catch (e) {
                                        throw new Error("Malformed UTF-8 data")
                                    }
                                },
                                parse: function(e) {
                                    return u.parse(unescape(encodeURIComponent(e)))
                                }
                            },
                            p = n.BufferedBlockAlgorithm = d.extend({
                                reset: function() {
                                    this._data = new l.init, this._nDataBytes = 0
                                },
                                _append: function(e) {
                                    "string" == typeof e && (e = m.parse(e)), this._data.concat(e), this._nDataBytes += e.sigBytes
                                },
                                _process: function(e) {
                                    var a, i = this._data,
                                        s = i.words,
                                        r = i.sigBytes,
                                        o = this.blockSize,
                                        n = r / (4 * o),
                                        d = (n = e ? t.ceil(n) : t.max((0 | n) - this._minBufferSize, 0)) * o,
                                        c = t.min(4 * d, r);
                                    if (d) {
                                        for (var f = 0; f < d; f += o) this._doProcessBlock(s, f);
                                        a = s.splice(0, d), i.sigBytes -= c
                                    }
                                    return new l.init(a, c)
                                },
                                clone: function() {
                                    var e = d.clone.call(this);
                                    return e._data = this._data.clone(), e
                                },
                                _minBufferSize: 0
                            }),
                            g = (n.Hasher = p.extend({
                                cfg: d.extend(),
                                init: function(e) {
                                    this.cfg = this.cfg.extend(e), this.reset()
                                },
                                reset: function() {
                                    p.reset.call(this), this._doReset()
                                },
                                update: function(e) {
                                    return this._append(e), this._process(), this
                                },
                                finalize: function(e) {
                                    return e && this._append(e), this._doFinalize()
                                },
                                blockSize: 16,
                                _createHelper: function(e) {
                                    return function(t, a) {
                                        return new e.init(a).finalize(t)
                                    }
                                },
                                _createHmacHelper: function(e) {
                                    return function(t, a) {
                                        return new g.HMAC.init(e, a).finalize(t)
                                    }
                                }
                            }), o.algo = {});
                        return o
                    }(Math), s)
                }),
                s = (t(function(e, t) {
                    var a;
                    e.exports = (a = i, function(e) {
                        var t = a,
                            i = t.lib,
                            s = i.WordArray,
                            r = i.Hasher,
                            o = t.algo,
                            n = [],
                            d = [];
                        ! function() {
                            function t(e) {
                                return 4294967296 * (e - (0 | e)) | 0
                            }
                            for (var a = 2, i = 0; i < 64;) ! function(t) {
                                for (var a = e.sqrt(t), i = 2; i <= a; i++)
                                    if (!(t % i)) return;
                                return 1
                            }(a) || (i < 8 && (n[i] = t(e.pow(a, .5))), d[i] = t(e.pow(a, 1 / 3)), i++), a++
                        }();
                        var l = [],
                            c = o.SHA256 = r.extend({
                                _doReset: function() {
                                    this._hash = new s.init(n.slice(0))
                                },
                                _doProcessBlock: function(e, t) {
                                    for (var a, i, s, r, o = this._hash.words, n = o[0], c = o[1], f = o[2], u = o[3], m = o[4], p = o[5], g = o[6], v = o[7], h = 0; h < 64; h++) {
                                        h < 16 ? l[h] = 0 | e[t + h] : (i = ((a = l[h - 15]) << 25 | a >>> 7) ^ (a << 14 | a >>> 18) ^ a >>> 3, r = ((s = l[h - 2]) << 15 | s >>> 17) ^ (s << 13 | s >>> 19) ^ s >>> 10, l[h] = i + l[h - 7] + r + l[h - 16]);
                                        var I = n & c ^ n & f ^ c & f,
                                            T = (n << 30 | n >>> 2) ^ (n << 19 | n >>> 13) ^ (n << 10 | n >>> 22),
                                            b = v + ((m << 26 | m >>> 6) ^ (m << 21 | m >>> 11) ^ (m << 7 | m >>> 25)) + (m & p ^ ~m & g) + d[h] + l[h];
                                        v = g, g = p, p = m, m = u + b | 0, u = f, f = c, c = n, n = b + (T + I) | 0
                                    }
                                    o[0] = o[0] + n | 0, o[1] = o[1] + c | 0, o[2] = o[2] + f | 0, o[3] = o[3] + u | 0, o[4] = o[4] + m | 0, o[5] = o[5] + p | 0, o[6] = o[6] + g | 0, o[7] = o[7] + v | 0
                                },
                                _doFinalize: function() {
                                    var t = this._data,
                                        a = t.words,
                                        i = 8 * this._nDataBytes,
                                        s = 8 * t.sigBytes;
                                    return a[s >>> 5] |= 128 << 24 - s % 32, a[14 + (64 + s >>> 9 << 4)] = e.floor(i / 4294967296), a[15 + (64 + s >>> 9 << 4)] = i, t.sigBytes = 4 * a.length, this._process(), this._hash
                                },
                                clone: function() {
                                    var e = r.clone.call(this);
                                    return e._hash = this._hash.clone(), e
                                }
                            });
                        t.SHA256 = r._createHelper(c), t.HmacSHA256 = r._createHmacHelper(c)
                    }(Math), a.SHA256)
                }), t(function(e, t) {
                    var a;
                    e.exports = (a = i, void
                        function() {
                            var e = a.lib.Base,
                                t = a.enc.Utf8;
                            a.algo.HMAC = e.extend({
                                init: function(e, a) {
                                    e = this._hasher = new e.init, "string" == typeof a && (a = t.parse(a));
                                    var i = e.blockSize,
                                        s = 4 * i;
                                    a.sigBytes > s && (a = e.finalize(a)), a.clamp();
                                    for (var r = this._oKey = a.clone(), o = this._iKey = a.clone(), n = r.words, d = o.words, l = 0; l < i; l++) n[l] ^= 1549556828, d[l] ^= 909522486;
                                    r.sigBytes = o.sigBytes = s, this.reset()
                                },
                                reset: function() {
                                    var e = this._hasher;
                                    e.reset(), e.update(this._iKey)
                                },
                                update: function(e) {
                                    return this._hasher.update(e), this
                                },
                                finalize: function(e) {
                                    var t = this._hasher,
                                        a = t.finalize(e);
                                    return t.reset(), t.finalize(this._oKey.clone().concat(a))
                                }
                            })
                        }())
                }), t(function(e, t) {
                    e.exports = i.HmacSHA256
                })),
                r = {
                    113: "MGFiZWQ5MmYtNGQ3Mi00ODAxLTgzYmUtODRiZWE5ZWM4YWY1\n",
                    13: "MGFiZWQ5MmYtNGQ3Mi00ODAxLTgzYmUtODRiZWE5ZWM4YWY1\n",
                    109: "MGFiZWQ5MmYtNGQ3Mi00ODAxLTgzYmUtODRiZWE5ZWM4YWY1\n",
                    9: "MGFiZWQ5MmYtNGQ3Mi00ODAxLTgzYmUtODRiZWE5ZWM4YWY1\n"
                };
            return function(e, t) {
                var a = r[e];
                if (!a) return "";
                var i, o = (i = "X-TNL-APPID:" + e, i = (i += "_") + "X-TNL-DEVICEOS:web", i = (i += "_") + "X-TNL-TIMESTAMP:" + t);
                console.log("m - " + o);
                var n = atob(a) + "_" + e + "_web_" + t;
                console.log("k - " + n);
                var d = s(o, n).toString();
                return console.log("si - " + d), d
            }
        }(crypto),
        r = function(e, t) {
            var a;
            return function() {
                var i = this,
                    s = arguments;
                clearTimeout(a), a = setTimeout(function() {
                    return e.apply(i, s)
                }, t)
            }
        },
        o = {
            sortBasedTime: function(e) {
                return e.sort(function(e, t) {
                    return Date.parse("1970/01/01 " + e.hour + ":" + e.minutes + " " + e.meridiem) - Date.parse("1970/01/01 " + t.hour + ":" + t.minutes + " " + t.meridiem)
                })
            },
            findIndexOfElements: function(e, t) {
                for (var a = 0; a < e.length; a++)
                    if ($(e[a]).hasClass(t)) return a
            },
            signG: function(e, t) {
                var a = [{
                    app_id: 109,
                    app_ver: "4.0.0.0",
                    counter: t,
                    date: new Date,
                    event_id: 1,
                    kingdom: "onboarding",
                    network_info: "wifi",
                    param1: "",
                    phylum: "view",
                    ref_id: 0,
                    session_id: "",
                    u_event_id: e,
                    u_ref_id: null,
                    user_id: "",
                    value1: ""
                }];
                const r = Math.floor(Date.now() / 1e3),
                    o = s(109, r),
                    n = {
                        "X-TNL-APPID": 109,
                        "X-TNL-DEVICEOS": "web",
                        "X-TNL-TIMESTAMP": r,
                        "X-TNL-SIG": o
                    };
                $.ajax({
                    type: "POST",
                    url: i.apis.tllmsApi,
                    contentType: "application/json",
                    data: JSON.stringify(a),
                    headers: n,
                    success: function(e, t, a) {
                        (a.status = 200) && console.log("sucess")
                    }
                })
            },
            cleverTap: function(e) {
                var t = {};
                t.user_id = o.validatedFormFieldsValues["free-trial-classes"].profileId, t.variety = o.validatedFormFieldsValues["free-trial-classes"].profileType, o.validatedFormFieldsValues["free-trial-classes"].state && (t.selectedState = o.validatedFormFieldsValues["free-trial-classes"].state), o.validatedFormFieldsValues["free-trial-classes"].grade && (t.grade_selected = o.validatedFormFieldsValues["free-trial-classes"].grade), o.validatedFormFieldsValues["free-trial-classes"].cohortId && (t.cohortId = o.validatedFormFieldsValues["free-trial-classes"].cohortId), o.validatedFormFieldsValues["free-trial-classes"].courseId && (t.courseId = o.validatedFormFieldsValues["free-trial-classes"].courseId), o.validatedFormFieldsValues["free-trial-classes"].topicName && (t.topicName = o.validatedFormFieldsValues["free-trial-classes"].topicName), o.validatedFormFieldsValues["free-trial-classes"].topicId && (t.topicId = o.validatedFormFieldsValues["free-trial-classes"].topicId), o.validatedFormFieldsValues["free-trial-classes"].slotId && (t.slotId = o.validatedFormFieldsValues["free-trial-classes"].slotId), o.validatedFormFieldsValues["free-trial-classes"].startTime && (t.startTime = o.validatedFormFieldsValues["free-trial-classes"].startTime), cleverTapProdTrigger(e, t)
            },
            callAirtelAPI: function(e) {
                jQuery.ajax({
                    type: "GET",
                    url: e,
                    contentType: !1,
                    crossDomain: !0,
                    cache: !1,
                    processData: !1,
                    success: function(e) {},
                    fail: function() {}
                })
            },
            validatedFormFieldsValues: {},
            validateFormFields: function(e, t) {
                o.validatedFormFieldsValues[e] || (o.validatedFormFieldsValues[e] = {});
                var a = $("[name=" + e + "]"),
                    i = a.find("[name]").not("[data-no-validation]"),
                    s = [];
                return i.each(function(a, i) {
                    var r = $(i),
                        n = r.attr("name");
                    switch (n) {
                        case "name":
                            this.isValidInput = UTILITIES.nameValidation, this.requiredName = "Name";
                            break;
                        case "state-offline":
                            this.isValidInput = UTILITIES.requiredValidation, this.requiredName = "State";
                            break;
                        case "class-offline":
                            this.isValidInput = UTILITIES.requiredValidation, this.requiredName = "Class";
                            break;
                        case "city-offline":
                            this.isValidInput = UTILITIES.requiredValidation, this.requiredName = "City";
                            break;
                        case "center-offline":
                            this.isValidInput = UTILITIES.requiredValidation, this.requiredName = "Select Centre";
                            break;
                        case "date-offline":
                            this.isValidInput = UTILITIES.requiredValidation, this.requiredName = "Date";
                            break;
                        case "state-offline":
                            this.isValidInput = UTILITIES.requiredValidation, this.requiredName = "State";
                            break;
                        case "slot-offline":
                            this.isValidInput = UTILITIES.requiredValidation, this.requiredName = "Choose Time Slot";
                            break;
                        case "mobile":
                            this.isValidInput = UTILITIES.phoneValidation, this.requiredName = "Mobile No.";
                            break;
                        case "email":
                            this.isValidInput = UTILITIES.emailValidation;
                            break;
                        case "course":
                            this.isValidInput = UTILITIES.requiredValidation, this.requiredName = "Course";
                            break;
                        case "state":
                            this.isValidInput = UTILITIES.requiredValidation, this.requiredName = "State";
                            break;
                        case "userProfile":
                            this.isValidInput = UTILITIES.requiredValidation, this.requiredName = "Profile selection";
                            break;
                        default:
                            this.isValidInput = null
                    }
                    "onInput" === t && r.on("input change", function() {
                        this.isValidInput && (this.isValid = this.isValidInput(r, null, this.requiredName, void 0 !== r.attr("data-optional"), r.attr("data-error-message"))), o.validatedFormFieldsValues[e][n] = r.val() ? r.val().trim() : ""
                    }), "onDirect" === t && this.isValidInput && (this.isValid = this.isValidInput(r, null, this.requiredName, void 0 !== r.attr("data-optional"), r.attr("data-error-message")), this.isValid || s.push(this.isValid), o.validatedFormFieldsValues[e][n] = r.val() ? r.val().trim() : "")
                }), !s.length
            },
            formStepNumber: 1,
            isPhoneNumberVerified: !1,
            referenceIdForMessageOtp: "",
            registration: function(e) {
                function t() {
                    c(), s.find("[data-choose-your-profile], [data-select-your-class]").addClass("hidden"), o.validatedFormFieldsValues[e].cohortId = "", o.validatedFormFieldsValues[e].grade = "", o.validatedFormFieldsValues[e].profileId = "";
                    var t = s.find("[data-choose-your-profile]");
                    t.find("[data-profiles]").removeClass("input-error"), t.find("[data-profiles]").siblings(".input-error-msg").remove()
                }

                function a(t, a, r) {
                    var n = {
                        userAttributes: {
                            verifiedMobile: "+91-" + t.mobile,
                            grade: t.grade,
                            name: t.name,
                            topicName: t.topicName,
                            subjectName: t.subjectName,
                            profileId: t.profileId,
                            profileType: t.profileType,
                            userLocationAttributes: {
                                adminArea: t.state
                            },
                            bcasAttributes: {
                                cohortId: t.cohortId,
                                courseId: t.courseId,
                                startTime: t.startTime,
                                endTime: t.endTime,
                                slotId: t.slotId,
                                topicId: t.topicId,
                                courseType: t.courseType
                            },
                            userAdTrackingAttributes: {
                                siteId: t.siteId,
                                adId: t.adId,
                                adsetId: t.adsetId,
                                pid: t.pid,
                                gclId: t.gclId,
                                fbclId: t.fbclId,
                                clientId: t.clientId,
                                utmContent: t.utmContent,
                                utmMedium: t.utmMedium,
                                utmSource: t.utmSource,
                                campaignName: t.campaignName,
                                campaignId: t.campaignId
                            },
                            url: void 0 !== UTILITIES.fixUrl ? UTILITIES.fixUrl(C_URL) : C_URL,
                            referrerUrl: document.referrer,
                            Website_URL: void 0 !== UTILITIES.fixUrl ? UTILITIES.fixUrl(C_URL) : C_URL,
                            Platform: void 0 !== navigator.isMobile ? navigator.isMobile ? "website_mobile" : "website_desktop" : "",
                            Lead_Magnet_Type: "HOME_PAGE_FORM",
                            Device_Details: void 0 !== navigator.detectDeviceAgent ? navigator.detectDeviceAgent : "",
                            Device_UserAgent: void 0 !== navigator.userAgent ? navigator.userAgent : ""
                        }
                    };
                    t.email && (n.userAttributes.unverifiedEmail = t.email), void 0 !== o.validatedFormFieldsValues[e].whatsapp && (n.userAttributes.whatsapp = o.validatedFormFieldsValues[e].whatsapp);
                    var d = JSON.stringify(n);
                    UTILITIES.removeToastMessage(6), $.ajax({
                        type: "POST",
                        url: i.apis.register,
                        contentType: "application/json",
                        dataType: "json",
                        data: d,
                        beforeSend: function(e) {
                            e.setRequestHeader("Authorization", "Bearer " + o.referenceIdForMessageOtp), e.setRequestHeader("signedlogintoken", r)
                        },
                        success: function(e, t, r) {
                            a.attr("disabled", !1), a.html("Loading.."), o.cleverTap("registration_form_submit_home");
                            var n = UTILITIES.getParameterByName("utm_campaign", C_URL);
                            if (o.showRegistrationSuccessMessage) return s.addClass("hidden"), $("[data-trial-form-indicators]").addClass("hidden"), s.siblings("[data-success-message]").removeClass("hidden"), $("form[name=registration]").siblings("[data-terms-conditions]").addClass("hidden"), $("[data-register-header]").addClass("hidden"), n && "airtel" == n && o.callAirtelAPI(i.apis.airtelApiConversion), "undefined" != typeof gtag && "undefined" != typeof step1Script && step1Script(), void("undefined" != typeof fbq && "undefined" != typeof step1fbScript && step1fbScript());
                            var d = r.getResponseHeader("Redirect-Url") || r.getResponseHeader("redirect-url");
                            d ? (n && "airtel" == n && o.callAirtelAPI(i.apis.airtelApiConversion), "undefined" != typeof gtag && "undefined" != typeof step2Script && step2Script(), "undefined" != typeof fbq && "undefined" != typeof step2fbScript && step2fbScript(), setTimeout(function() {
                                window.location.href = d
                            }, 1e3)) : UTILITIES.addToastMessage(6, i.messages.somethingWentWrong)
                        },
                        error: function(e) {
                            if ($("#ftc-offline").is(":checked")) {
                                var t = $("#schedule-online-session-btn-no-center");
                                t.attr("disabled", !1), t.html("Schedule a Free Online Class")
                            }
                            a.attr("disabled", !1), a.html(a.attr("data-text")), UTILITIES.addToastMessage(6, e.responseJSON && e.responseJSON.message ? e.responseJSON.message : i.messages.somethingWentWrong), o.cleverTap("registration_form_submit_error")
                        }
                    })
                }
                o.signG(2400200, "view book a free class page"), o.signG(2400201, "click book a free class page");
                var s = $("form[name=" + e + "]"),
                    n = s.find("[data-submit-button]"),
                    d = s.find("[data-mobile-input]");
                o.validatedFormFieldsValues[e].isProfileOptionEnabled = !1, o.validatedFormFieldsValues[e].isGradeOptionEnabled = !1, o.validatedFormFieldsValues[e].isTopicOptionEnabled = !1, o.validatedFormFieldsValues[e].isSlotOptionEnabled = !1, s.find('[name="whatsapp"]').length && (o.validatedFormFieldsValues[e].whatsapp = !1), o.validatedFormFieldsValues[e].siteId = UTILITIES.getParamValueByName("siteId", C_URL), o.validatedFormFieldsValues[e].adId = UTILITIES.getParamValueByName("ad_id", C_URL), o.validatedFormFieldsValues[e].adsetId = UTILITIES.getParamValueByName("adset_id", C_URL), o.validatedFormFieldsValues[e].pid = UTILITIES.getParamValueByName("pid", C_URL), o.validatedFormFieldsValues[e].gclId = UTILITIES.getParamValueByName("gclid", C_URL), o.validatedFormFieldsValues[e].fbclId = UTILITIES.getParamValueByName("fbclid", C_URL), o.validatedFormFieldsValues[e].clientId = window.location.host, o.validatedFormFieldsValues[e].utmContent = UTILITIES.getParamValueByName("utm_content", C_URL), o.validatedFormFieldsValues[e].utmMedium = UTILITIES.getParamValueByName("utm_medium", C_URL), o.validatedFormFieldsValues[e].utmSource = UTILITIES.getParamValueByName("utm_source", C_URL), o.validatedFormFieldsValues[e].campaignName = UTILITIES.getParamValueByName("utm_campaign", C_URL), o.validatedFormFieldsValues[e].campaignId = UTILITIES.getParamValueByName("campaign_ID", C_URL);
                var l = s.find('[name="name"], [name="mobile"], [name="email"]'),
                    c = r(function() {
                        o.profileAndGradeApiControl(e)
                    }, formApiDebounceTime);
                s.find('[name="state"]').on("change", function() {
                    this.oneTimeFlag || (this.oneTimeFlag = 1), t()
                }), l.on("input", function() {
                    this.oneTimeFlag || (this.oneTimeFlag = 1), t()
                });
                var f, u = [];
                s.on("submit", function(t) {
                    o.signG(2400206, "Click schedule/book a free class/try now"), t.preventDefault();
                    var r = o.validatedFormFieldsValues[e];
                    if (!1 === r.isGradeOptionEnabled && (s.find("[data-grades]").removeClass("input-error").addClass("input-error"), s.find("[data-grades]").siblings(".input-error-msg").remove(), s.find("[data-grades]").after('<div class="input-error-msg">Please select your class.</div>')), o.validateFormFields(e, "onDirect"))
                        if (s.find('[name="whatsapp"]').length && (o.validatedFormFieldsValues[e].whatsapp = s.find('[name="whatsapp"]').is(":checked")), o.isPhoneNumberVerified) {
                            if (1 != o.validatedFormFieldsValues[e].grade && 2 != o.validatedFormFieldsValues[e].grade && 3 != o.validatedFormFieldsValues[e].grade && "IAS" != o.validatedFormFieldsValues[e].grade && "CAT" != o.validatedFormFieldsValues[e].grade && "GATE" != o.validatedFormFieldsValues[e].grade || ("IAS" == o.validatedFormFieldsValues[e].grade ? u = "IAS" : "CAT" == o.validatedFormFieldsValues[e].grade ? u = "CAT" : "GATE" == o.validatedFormFieldsValues[e].grade && (u = "GATE"), o.formStepNumber = 2, o.showRegistrationSuccessMessage = !0), 1 === o.formStepNumber) {
                                if (o.validatedFormFieldsValues[e].isProfileOptionEnabled && !o.validatedFormFieldsValues[e].profileId) return s.find("[data-profiles]").removeClass("input-error").addClass("input-error"), s.find("[data-profiles]").siblings(".input-error-msg").remove(), void s.find("[data-profiles]").after('<div class="input-error-msg">Please choose your profile.</div>');
                                if (!o.validatedFormFieldsValues[e].cohortId || !o.validatedFormFieldsValues[e].grade) return s.find("[data-grades]").removeClass("input-error").addClass("input-error"), s.find("[data-grades]").siblings(".input-error-msg").remove(), void s.find("[data-grades]").after('<div class="input-error-msg">Please select your class.</div>');
                                n.attr("disabled", !0), n.html("Loading..");
                                var l = {
                                    userAttributes: {
                                        verifiedMobile: "+91-" + r.mobile,
                                        grade: r.grade,
                                        name: r.name,
                                        userLocationAttributes: {
                                            adminArea: r.state
                                        },
                                        cohortId: r.cohortId,
                                        grade: r.grade,
                                        profileId: r.profileId
                                    },
                                    page: "free-trial-classes-home"
                                };
                                void 0 !== o.validatedFormFieldsValues[e].whatsapp && (l.userAttributes = o.validatedFormFieldsValues[e].whatsapp), r.email && (l.userAttributes.unverifiedEmail = r.email);
                                var c = JSON.stringify(l);
                                UTILITIES.removeToastMessage(7), $.ajax({
                                    type: "POST",
                                    url: i.apis.selectCohort,
                                    contentType: "application/json",
                                    dataType: "json",
                                    data: c,
                                    beforeSend: function(e) {
                                        e.setRequestHeader("Authorization", "Bearer " + o.referenceIdForMessageOtp)
                                    },
                                    success: function(t, s, d) {
                                        if (t.signedLoginToken)
                                            if (o.signedLoginToken = t.signedLoginToken, 11 == o.validatedFormFieldsValues[e].grade || 12 == o.validatedFormFieldsValues[e].grade || "11-12" == o.validatedFormFieldsValues[e].grade) a(r, n, o.signedLoginToken);
                                            else {
                                                function l() {
                                                    UTILITIES.removeToastMessage(8), $.ajax({
                                                        type: "GET",
                                                        url: i.apis.topicsAndTimeSlots + "?cohortId=" + o.validatedFormFieldsValues["free-trial-classes"].cohortId,
                                                        success: function(e, t, i) {
                                                            if (e.topics && e.topics.length) return r.courseId = e.topics[0].courseId, r.courseType = e.topics[0].courseType, r.startTime = e.topics[0].slots[0].start_time, r.endTime = e.topics[0].slots[0].end_time, r.slotId = e.topics[0].slots[0].slot_id, r.topicId = e.topics[0].id, void a(r, n, o.signedLoginToken);
                                                            if ($("#ftc-offline").is(":checked")) {
                                                                var s = $("#schedule-online-session-btn-no-center");
                                                                s.attr("disabled", !1), s.html("Schedule a Free Online Class")
                                                            }
                                                            UTILITIES.addToastMessage(8, "No classes scheduled"), n.html(n.attr("data-text")), n.attr("disabled", !1)
                                                        },
                                                        error: function(e) {
                                                            n.attr("disabled", !1), n.html(n.attr("data-text")), UTILITIES.addToastMessage(8, e.responseJSON && e.responseJSON.message ? e.responseJSON.message : i.messages.somethingWentWrong)
                                                        }
                                                    })
                                                }
                                                l()
                                            }
                                        else UTILITIES.addToastMessage(7, i.messages.somethingWentWrong)
                                    },
                                    error: function(e) {
                                        var t = $("#schedule-online-session-btn-no-center");
                                        t.attr("disabled", !1), t.html("Schedule a Free Online Class"), n.attr("disabled", !1), n.html(n.attr("data-text")), console.log(e.responseJSON), UTILITIES.addToastMessage(7, e.responseJSON && e.responseJSON.message ? "Mobile Number not verified" == e.responseJSON.message ? "Mobile Number verification expired" : e.responseJSON.message : i.messages.somethingWentWrong)
                                    }
                                }), s.find('[name="whatsapp"]').length && s.find('[name="whatsapp"]').is(":checked") && o.cleverTap("receive_update_via_whatsapp"), o.cleverTap("registration_form_submit_step1"), "undefined" != typeof gtag && "undefined" != typeof step1Script && step1Script(), "undefined" != typeof fbq && "undefined" != typeof step1fbScript && step1fbScript()
                            } else if (2 === o.formStepNumber) {
                                jQuery("html, body").animate({
                                    scrollTop: 0
                                }, 400), n.attr("disabled", !0), n.html("Loading..");
                                l = {
                                    userAttributes: {
                                        verifiedMobile: "+91-" + r.mobile,
                                        grade: r.grade,
                                        name: r.name,
                                        topicName: r.topicName,
                                        subjectName: r.subjectName,
                                        profileId: r.profileId,
                                        profileType: r.profileType,
                                        userLocationAttributes: {
                                            adminArea: r.state
                                        },
                                        bcasAttributes: {
                                            cohortId: r.cohortId,
                                            courseId: r.courseId,
                                            startTime: r.startTime,
                                            endTime: r.endTime,
                                            slotId: r.slotId,
                                            topicId: r.topicId,
                                            courseType: u
                                        },
                                        userAdTrackingAttributes: {
                                            siteId: r.siteId,
                                            adId: r.adId,
                                            adsetId: r.adsetId,
                                            pid: r.pid,
                                            gclId: r.gclId,
                                            fbclId: r.fbclId,
                                            clientId: r.clientId,
                                            utmContent: r.utmContent,
                                            utmMedium: r.utmMedium,
                                            utmSource: r.utmSource,
                                            campaignName: r.campaignName,
                                            campaignId: r.campaignId
                                        },
                                        url: void 0 !== UTILITIES.fixUrl ? UTILITIES.fixUrl(C_URL) : C_URL,
                                        referrerUrl: document.referrer,
                                        Website_URL: void 0 !== UTILITIES.fixUrl ? UTILITIES.fixUrl(C_URL) : C_URL,
                                        Platform: void 0 !== navigator.isMobile ? navigator.isMobile ? "website_mobile" : "website_desktop" : "",
                                        Lead_Magnet_Type: "HOME_PAGE_FORM",
                                        Device_Details: void 0 !== navigator.detectDeviceAgent ? navigator.detectDeviceAgent : "",
                                        Device_UserAgent: void 0 !== navigator.userAgent ? navigator.userAgent : ""
                                    }
                                };
                                "1" != l.userAttributes.grade && "2" != l.userAttributes.grade && "3" != l.userAttributes.grade || delete l.userAttributes.bcasAttributes.courseType, r.email && (l.userAttributes.unverifiedEmail = r.email), void 0 !== o.validatedFormFieldsValues[e].whatsapp && (l.userAttributes.whatsapp = o.validatedFormFieldsValues[e].whatsapp);
                                c = JSON.stringify(l);
                                UTILITIES.removeToastMessage(6), $.ajax({
                                    type: "POST",
                                    url: i.apis.register,
                                    contentType: "application/json",
                                    dataType: "json",
                                    data: c,
                                    beforeSend: function(e) {
                                        e.setRequestHeader("Authorization", "Bearer " + o.referenceIdForMessageOtp), e.setRequestHeader("signedlogintoken", o.signedLoginToken)
                                    },
                                    success: function(t, a, r) {
                                        n.attr("disabled", !1), n.html("Loading.."), $(".ftc-session-section").hide(), o.cleverTap("registration_form_submit_home");
                                        var d = UTILITIES.getParameterByName("utm_campaign", C_URL);
                                        if (o.showRegistrationSuccessMessage) return s.addClass("hidden"), $("[data-trial-form-indicators]").addClass("hidden"), s.siblings("[data-success-message]").removeClass("hidden"), $("form[name=registration]").siblings("[data-terms-conditions]").addClass("hidden"), $("[data-register-header]").addClass("hidden"), "IAS" != o.validatedFormFieldsValues[e].grade && "CAT" != o.validatedFormFieldsValues[e].grade && "GATE" != o.validatedFormFieldsValues[e].grade || ($(".trial-form-title").addClass("hidden"), $(".trial-form-title-sub-desc").addClass("hidden")), d && "airtel" == d && o.callAirtelAPI(i.apis.airtelApiConversion), "undefined" != typeof gtag && "undefined" != typeof step1Script && step1Script(), void("undefined" != typeof fbq && "undefined" != typeof step1fbScript && step1fbScript());
                                        var l = r.getResponseHeader("Redirect-Url") || r.getResponseHeader("redirect-url");
                                        l ? (d && "airtel" == d && o.callAirtelAPI(i.apis.airtelApiConversion), "undefined" != typeof gtag && "undefined" != typeof step2Script && step2Script(), "undefined" != typeof fbq && "undefined" != typeof step2fbScript && step2fbScript(), setTimeout(function() {
                                            window.location.href = l
                                        }, 1e3)) : UTILITIES.addToastMessage(6, i.messages.somethingWentWrong)
                                    },
                                    error: function(e) {
                                        if ($("#ftc-offline").is(":checked")) {
                                            var t = $("#schedule-online-session-btn-no-center");
                                            t.attr("disabled", !1), t.html("Schedule a Free Online Class")
                                        }
                                        n.attr("disabled", !1), n.html(n.attr("data-text")), UTILITIES.addToastMessage(6, e.responseJSON && e.responseJSON.message ? e.responseJSON.message : i.messages.somethingWentWrong), o.cleverTap("registration_form_submit_error")
                                    }
                                })
                            }
                        } else {
                            d.removeClass("input-error").addClass("input-error"), d.siblings(".input-error-msg").remove(), d.after('<div class="input-error-msg">Validate your mobile number</div>');
                            var f = $("[data-otp-input-field-voice-call-option]");
                            !f.is(":visible") || f.find("input").val() || f.find("input").siblings(".input-error-msg").length || f.find("input").after('<div class="input-error-msg">Enter 4 digit OTP</div>')
                        }
                    else {
                        f = $("[data-otp-input-field-voice-call-option]");
                        !f.is(":visible") || f.find("input").val() || f.find("input").siblings(".input-error-msg").length || f.find("input").after('<div class="input-error-msg">Enter 4 digit OTP</div>')
                    }
                });
                var m, p, g = s.find("[data-send-otp-button]"),
                    v = s.find("[data-otp-validated-img]"),
                    h = s.find("[data-otp-input-field-voice-call-option]"),
                    I = h.find("input"),
                    T = !0;
                o.resetOtpCounterTime = function() {
                    clearInterval(f)
                }, g.on("click", function() {
                    if (UTILITIES.phoneValidation(d, null, "Mobile No.")) {
                        var t = 30;
                        g.attr("disabled", !0), g.html('<div class="otp-active-timer" data-otp-active-timer>Resend in <span>' + t + "</span>sec.</div>"), f = setInterval(function() {
                            --t, t <= 0 && (clearInterval(f), g.attr("disabled", !1), g.html("Resend OTP")), g.find("[data-otp-active-timer] span").html(t)
                        }, 1e3), h.removeClass("hidden"), I.attr("disabled", !1).focus();
                        var a = JSON.stringify({
                            phoneNumber: o.validatedFormFieldsValues[e].mobile,
                            page: "free-trial-classes-home"
                        });
                        UTILITIES.removeToastMessage(1), o.signG(2400202, "Click send OTP"), 0 == MT_OTP_ENCRYPTION_ENABLED_VAL || 1 == MT_OTP_ENCRYPTION_ENABLED_VAL && OTP_ENCRYPT_PAYLOAD_MT.isTokenValid(OTP_ENCRYPT_PAYLOAD_MT.getToken()) ? $.ajax({
                            type: "POST",
                            url: i.apis.sendOtp,
                            contentType: "application/json",
                            dataType: "json",
                            data: 1 == MT_OTP_ENCRYPTION_ENABLED_VAL ? OTP_ENCRYPT_PAYLOAD_MT.sendEncryptedData(a) : a,
                            success: function(e, t, a) {
                                o.referenceIdForMessageOtp = a.getResponseHeader("Reference-Id") || a.getResponseHeader("reference-id"), d.siblings(".input-error-msg").remove(), m = e.number, d.after('<div class="input-error-msg" style="color:green;">We have sent the OTP to <b>' + e.number + "</b></div>"), cleverTapProdTrigger("send_otp_success")
                            },
                            error: function(e) {
                                429 === e.statusCode().status && e.responseJSON.isOtpExhausted ? (d.siblings(".input-error-msg").remove(), d.after('<div class="input-error-msg">' + e.responseJSON.message + "</div>")) : UTILITIES.addToastMessage(1, e.responseJSON && e.responseJSON.message ? e.responseJSON.message : i.messages.somethingWentWrong), cleverTapProdTrigger("send_otp_error")
                            }
                        }) : UTILITIES.addToastMessage(2, "Session Expired"), T ? cleverTapProdTrigger("click_on_otp") : cleverTapProdTrigger("Resend_OTP"), T = !1
                    }
                });
                var b = h.find("button");
                b.on("click", function() {
                    o.signG(2400203, "Click OTP voice call");
                    var t = 30;
                    b.find("span").html(" <b>" + t + "</b>sec."), b.attr("disabled", !0), I.attr("disabled", !1).focus(), p = setInterval(function() {
                        --t, t <= 0 ? (clearInterval(p), b.find("span").html("Voice Call"), b.attr("disabled", !1)) : b.find("span").html(" <b>" + t + "</b>sec.")
                    }, 1e3);
                    var a = $.param({
                        phoneNumber: o.validatedFormFieldsValues[e].mobile,
                        page: e
                    });
                    UTILITIES.removeToastMessage(3), UTILITIES.removeToastMessage(4), $.get(i.apis.voiceOtp + "?" + a, function(e, t, a) {
                            200 === a.status && e ? (d.siblings(".input-error-msg").remove(), UTILITIES.addToastMessage(4, "Calling in 30 seconds"), setTimeout(function() {
                                UTILITIES.removeToastMessage(4)
                            }, 5e3)) : (429 === err.statusCode().status && err.responseJSON.isOtpExhausted ? UTILITIES.addToastMessage(4, e.message) : UTILITIES.addToastMessage(3, err.responseJSON && err.responseJSON.message ? err.responseJSON.message : i.messages.somethingWentWrong), cleverTapProdTrigger("submit_voice_call_error"))
                        }),
                        cleverTapProdTrigger("click_on_voice_call")
                }), I.on("input", function() {
                    if (UTILITIES.otpValidation($(this))) {
                        var t = JSON.stringify({
                            otp: $(this).val(),
                            phoneNumber: m,
                            page: "free-trial-classes-home"
                        });
                        UTILITIES.removeToastMessage(2), 0 == MT_OTP_ENCRYPTION_ENABLED_VAL || 1 == MT_OTP_ENCRYPTION_ENABLED_VAL && OTP_ENCRYPT_PAYLOAD_MT.isTokenValid(OTP_ENCRYPT_PAYLOAD_MT.getToken()) ? $.ajax({
                            type: "POST",
                            url: i.apis.verifyOtp,
                            contentType: "application/json",
                            dataType: "json",
                            data: 1 == MT_OTP_ENCRYPTION_ENABLED_VAL ? OTP_ENCRYPT_PAYLOAD_MT.sendEncryptedData(t) : t,
                            beforeSend: function(e) {
                                e.setRequestHeader("Authorization", "Bearer " + o.referenceIdForMessageOtp)
                            },
                            success: function(t, a, i) {
                                o.referenceIdForMessageOtp = i.getResponseHeader("Reference-Id") || i.getResponseHeader("reference-id"), g.attr("disabled", !1).addClass("hidden"), v.removeClass("hidden"), d.attr("disabled", !0), d.addClass("phone-valid"), d.siblings(".input-error-msg").remove(), h.addClass("hidden"), o.isPhoneNumberVerified = !0, o.profileAndGradeApiControl(e), UTILITIES.removeToastMessage(1), UTILITIES.removeToastMessage(2), UTILITIES.removeToastMessage(3), UTILITIES.removeToastMessage(4), cleverTapProdTrigger("otp_submit_success")
                            },
                            error: function(e) {
                                400 === e.statusCode().status ? (I.removeClass("input-error"), I.siblings(".input-error-msg").remove(), I.addClass("input-error"), I.after('<div class="input-error-msg">' + e.responseJSON.message + "</div>")) : 401 === e.statusCode().status ? UTILITIES.addToastMessage(2, e.responseJSON.message) : UTILITIES.addToastMessage(2, i.messages.somethingWentWrong), cleverTapProdTrigger("otp_submit_error")
                            }
                        }) : UTILITIES.addToastMessage(2, "Session Expired"), cleverTapProdTrigger("otp_Submit")
                    }
                })
            },
            profileAndGradeApiControl: function(e) {
                console.log("came here " + e);
                var t = $("form[name=" + e + "]");
                if (t.find('[name="mobile"]')[0].oneTimeFlag && t.find('[name="name"]')[0].oneTimeFlag && t.find('[name="state"]')[0].oneTimeFlag) {
                    var a = t.find("[data-mobile-input]"),
                        s = t.find("[data-submit-button]"),
                        r = o.validatedFormFieldsValues[e];
                    if (o.validateFormFields(e, "onDirect"))
                        if (o.isPhoneNumberVerified) {
                            var n = {
                                userAttributes: {
                                    verifiedMobile: "+91-" + r.mobile,
                                    name: r.name,
                                    userLocationAttributes: {
                                        adminArea: r.state
                                    },
                                    userAdTrackingAttributes: {
                                        siteId: r.siteId,
                                        adId: r.adId,
                                        adsetId: r.adsetId,
                                        pid: r.pid,
                                        gclId: r.gclId,
                                        fbclId: r.fbclId,
                                        clientId: r.clientId,
                                        utmContent: r.utmContent,
                                        utmMedium: r.utmMedium,
                                        utmSource: r.utmSource,
                                        campaignName: r.campaignName,
                                        campaignId: r.campaignId
                                    }
                                },
                                page: "free-trial-classes-home"
                            };
                            void 0 !== o.validatedFormFieldsValues[e].whatsapp && (n.userAttributes.whatsapp = o.validatedFormFieldsValues[e].whatsapp), r.email && (n.userAttributes.unverifiedEmail = r.email);
                            var d = JSON.stringify(n);
                            UTILITIES.removeToastMessage(5), $("#ftc-offline").is(":checked") && $(".loading-btn-ftc").html("Loading ..."), $("#ftc-online").is(":checked") && $(".loading-btn-ftc").html("Loading ..."), $(".loading-btn-ftc").attr("disabled", !0), $.ajax({
                                type: "POST",
                                url: i.apis.getUserProfile,
                                contentType: "application/json",
                                dataType: "json",
                                data: d,
                                beforeSend: function(e) {
                                    e.setRequestHeader("Authorization", "Bearer " + o.referenceIdForMessageOtp)
                                },
                                success: function(a, s, n) {
                                    $("#ftc-offline").is(":checked") && $(".loading-btn-ftc").html("Continue to schedule"), $("#ftc-online").is(":checked") && $(".loading-btn-ftc").html("Schedule a Free Class"), $(".loading-btn-ftc").attr("disabled", !1);
                                    n.getResponseHeader("Reference-Id") || n.getResponseHeader("Reference-Id");
                                    if (a.data)
                                        if (a.data.paidProfiles.length > 1) o.showAndBuildProfiles(t, a.data.paidProfiles), o.validatedFormFieldsValues[e].profileType = "PAID", o.validatedFormFieldsValues[e].isProfileOptionEnabled = !0;
                                        else {
                                            var d;
                                            if (1 === a.data.paidProfiles.length) d = a.data.paidProfiles[0], d.type = "PAID", o.validatedFormFieldsValues[e].isGradeOptionEnabled = !0;
                                            else {
                                                if (1 !== a.data.freeProfiles.length) return void UTILITIES.addToastMessage(5, i.messages.somethingWentWrong);
                                                d = a.data.freeProfiles[0], d.type = "FREE", o.validatedFormFieldsValues[e].isGradeOptionEnabled = !0
                                            }
                                            JSON.stringify({
                                                userProfile: {
                                                    id: d["Profile-Id"],
                                                    name: d.name,
                                                    email: r.email,
                                                    type: d.type
                                                }
                                            }), o.validatedFormFieldsValues[e].profileId = d.id, o.validatedFormFieldsValues[e].profileType = d.type, o.showAndBuildGrades(t, d)
                                        }
                                    else UTILITIES.addToastMessage(5, i.messages.somethingWentWrong)
                                },
                                error: function(e) {
                                    if ($("#ftc-offline").is(":checked") && $(".loading-btn-ftc").html("Continue to schedule"), $("#ftc-online").is(":checked") && $(".loading-btn-ftc").html("Schedule a Free Class"), $(".loading-btn-ftc").attr("disabled", !1), $("#ftc-offline").is(":checked")) {
                                        var t = $("#schedule-online-session-btn-no-center");
                                        t.attr("disabled", !1), t.html("Schedule a Free Online Class")
                                    }
                                    s.attr("disabled", !1), s.html(s.attr("data-text")), UTILITIES.addToastMessage(5, e.responseJSON && e.responseJSON.message ? e.responseJSON.message : i.messages.somethingWentWrong), o.cleverTap("registration_form_submit_error")
                                }
                            })
                        } else {
                            t.find("[data-otp-input-field-voice-call-option]").is(":visible") || (a.removeClass("input-error").addClass("input-error"), a.siblings(".input-error-msg").remove(), a.after('<div class="input-error-msg">Validate your mobile number</div>'));
                            var l = $("[data-otp-input-field-voice-call-option]");
                            !l.is(":visible") || l.find("input").val() || l.find("input").siblings(".input-error-msg").length || l.find("input").after('<div class="input-error-msg">Enter 4 digit OTP</div>')
                        }
                    else {
                        l = $("[data-otp-input-field-voice-call-option]");
                        !l.is(":visible") || l.find("input").val() || l.find("input").siblings(".input-error-msg").length || l.find("input").after('<div class="input-error-msg">Enter 4 digit OTP</div>')
                    }
                }
            },
            showAndBuildGrades: function(e, t) {
                function a(e) {
                    var t = "",
                        a = [],
                        i = [];
                    inclusionList.forEach(function(e, t) {
                        i.push(e.toLowerCase().trim())
                    }), e.forEach(function(e, t) {
                        i.indexOf(e.displayName.toLowerCase().trim()) >= 0 && a.push(e)
                    });
                    t = '<option value="" disabled="" selected>Select your class</option>';
                    return $("#ftc-offline").is(":checked") && (a = a.slice(3, 10)), a.forEach(function(e, a) {
                        t += '<div><select data-grade-card-cta><option name="cohortId" data-grade="' + e.grade + '" data-grade-card-cta id="trial-grade-' + a + '" value="' + e.id + '" >Class <br />' + e.grade + "</option></select></div>"
                    }), $("#ftc-online").is(":checked") && (t += '<option name="cohortId" data-grade="IAS" data-grade-card-cta id="128" value="128" ><br />IAS</option>', t += '<option name="cohortId" data-grade="CAT" data-grade-card-cta id="129" value="129" ><br />CAT</option>', t += '<option name="cohortId" data-grade="GATE" data-grade-card-cta id="127" value="127" ><br />GATE</option>'), '<div class="grades">' + t + "</div>"
                }
                o.validatedFormFieldsValues["free-trial-classes"].isGradeOptionEnabled = !0;
                var i = e.find("[data-select-your-class]");
                i.find("[data-grades]").html(a(t.availableCohorts)), o.carouselControlHandler("#trial-grades-carousel"), i.removeClass("hidden"), o.signG(2400204, "View select your class"), i.find("[data-grade-card-cta]").on("change", function() {
                    o.signG(2400205, "Click select your class");
                    var e = $(this).children("option:selected").val();
                    e && (o.validatedFormFieldsValues["free-trial-classes"].cohortId = e, o.validatedFormFieldsValues["free-trial-classes"].grade = $(this).children("option:selected").attr("data-grade"), i.find("[data-grades]").removeClass("input-error").addClass("input-valid"), i.find("[data-grades]").siblings(".input-error-msg").remove(), o.cleverTap("grade_selected"))
                })
            },
            showAndBuildProfiles: function(e, t) {
                function a(e) {
                    var t = "";
                    return e.forEach(function(a, i) {
                        i % 3 == 0 && 0 !== i && (t += "</div></div>"), i % 3 != 0 && 0 !== i || (t += '<div class="carousel-item item ' + (0 === i ? "active" : "") + '"><div class="row profiles-row">'), t += '<div class="col-xs-4 col-4"><div class="toggle-card"><input type="radio" id="toggle-card-' + a.id + "-" + i + '" name="profileId" value="' + a.id + '" data-profile-card-cta><label for="toggle-card-' + a.id + "-" + i + '"><h4>' + a.name + "</h4><p>" + a.displayName + "</p></label></div></div>", e.length - 1 === i && (t += "</div></div>")
                    }), t
                }
                var i = e.find("[data-choose-your-profile]"),
                    s = '<div id="profiles-carousel" class="carousel slide profiles-carousel trial-item-carousel" data-ride="carousel" data-interval="false"><div class="carousel-inner">' + a(t) + '</div><a class="left carousel-control hidden" href="#profiles-carousel" data-slide="prev"><svg xmlns="https://www.w3.org/2000/svg" width="6.604" height="11.585" viewBox="0 0 6.604 11.585"><g transform="translate(103.744 -0.001) rotate(90)"><path d="M5.793,103.744a.809.809,0,0,1-.574-.237L.238,98.525a.811.811,0,0,1,1.147-1.147l4.407,4.408L10.2,97.378a.811.811,0,0,1,1.147,1.147l-4.981,4.981A.809.809,0,0,1,5.793,103.744Z" transform="translate(0 0)" /></g></svg></a><a class="right carousel-control ' + (t.length <= 3 ? "hidden" : "") + '" href="#profiles-carousel" data-slide="next"><svg xmlns="https://www.w3.org/2000/svg" width="6.604" height="11.585" viewBox="0 0 6.604 11.585"><g transform="translate(-97.141 11.586) rotate(-90)"><path d="M5.793,103.744a.809.809,0,0,1-.574-.237L.238,98.525a.811.811,0,0,1,1.147-1.147l4.407,4.408L10.2,97.378a.811.811,0,0,1,1.147,1.147l-4.981,4.981A.809.809,0,0,1,5.793,103.744Z" transform="translate(0 0)" /></g></svg></a></div>';
                i.find("[data-profiles]").html(s), o.carouselControlHandler("#profiles-carousel"), i.removeClass("hidden"), i.find("[data-profile-card-cta]").on("change", function() {
                    var a = $(this).attr("value");
                    $(this).is(":checked") && (o.showAndBuildGrades(e, function() {
                        for (var e = 0; e < t.length; e++)
                            if (t[e].id === a) return t[e]
                    }()), o.validatedFormFieldsValues["free-trial-classes"].profileId = a, i.find("[data-profiles]").removeClass("input-error").addClass("input-valid"), i.find("[data-profiles]").siblings(".input-error-msg").remove(), e.find("[data-select-your-class]").find("[data-grades]").removeClass("input-error"), e.find("[data-select-your-class]").find("[data-grades]").siblings(".input-error-msg").remove(), e.find("[data-select-your-class]").find("[data-grades]").removeClass("input-valid"), o.cleverTap("user_profile_selected"))
                })
            },
            timeSlots: {},
            showAndBuildTopicsAndSlots: function(e, t) {
                function a(e) {
                    var t = "";
                    return e.forEach(function(a, i) {
                        i % 3 == 0 && 0 !== i && (t += "</div></div>"), i % 3 != 0 && 0 !== i || (t += '<div class="carousel-item item ' + (0 === i ? "active" : "") + '"><div class="row profiles-row">'), t += '<div class="col-xs-4 col-4"><div class="toggle-card"><input type="radio" id="trial-topic-card-' + a.id + "-" + i + '" name="topicId" value="' + a.id + '" data-topic-card-cta data-courseId="' + a.courseId + '" data-cohortId="' + a.cohortId + '" data-name="' + a.name + '" data-subjectName="' + a.subject_name + '"><label for="trial-topic-card-' + a.id + "-" + i + '"><p>' + a.name + "</p></label></div></div>", e.length - 1 === i && (t += "</div></div>"), s[a.id] = {}, s[a.id] = a
                    }), t
                }
                o.validatedFormFieldsValues["free-trial-classes"].isTopicOptionEnabled = !0;
                var i = e.find("[data-choose-your-topic]"),
                    s = {},
                    r = '<div id="trial-topics-carousel" class="carousel slide topics-carousel trial-item-carousel" data-ride="carousel" data-interval="false"><div class="carousel-inner">' + a(t) + '</div><a class="left carousel-control hidden" href="#trial-topics-carousel" data-slide="prev"><svg xmlns="https://www.w3.org/2000/svg" width="6.604" height="11.585" viewBox="0 0 6.604 11.585"><g transform="translate(103.744 -0.001) rotate(90)"><path d="M5.793,103.744a.809.809,0,0,1-.574-.237L.238,98.525a.811.811,0,0,1,1.147-1.147l4.407,4.408L10.2,97.378a.811.811,0,0,1,1.147,1.147l-4.981,4.981A.809.809,0,0,1,5.793,103.744Z" transform="translate(0 0)" /></g></svg></a><a class="right carousel-control ' + (t.length <= 3 ? "hidden" : "") + '" href="#trial-topics-carousel" data-slide="next"><svg xmlns="https://www.w3.org/2000/svg" width="6.604" height="11.585" viewBox="0 0 6.604 11.585"><g transform="translate(-97.141 11.586) rotate(-90)"><path d="M5.793,103.744a.809.809,0,0,1-.574-.237L.238,98.525a.811.811,0,0,1,1.147-1.147l4.407,4.408L10.2,97.378a.811.811,0,0,1,1.147,1.147l-4.981,4.981A.809.809,0,0,1,5.793,103.744Z" transform="translate(0 0)" /></g></svg></a></div>';
                i.find("[data-topics]").html(r), i.find("[data-topics]").removeClass("hidden"), o.carouselControlHandler("#trial-topics-carousel"), i.find("[data-topic-card-cta]").on("change", function() {
                    if ($(this).is(":checked")) {
                        var t = $(this).attr("value");
                        o.validatedFormFieldsValues["free-trial-classes"].topicId = t, o.validatedFormFieldsValues["free-trial-classes"].topicName = $(this).attr("data-name"), o.validatedFormFieldsValues["free-trial-classes"].subjectName = $(this).attr("data-subjectName"), o.validatedFormFieldsValues["free-trial-classes"].slotId = "", o.validatedFormFieldsValues["free-trial-classes"].startTime = "", o.validatedFormFieldsValues["free-trial-classes"].endTime = "", e.find("[data-time-slots]").removeClass("input-error"), e.find("[data-time-slots]").siblings(".input-error-msg").remove(), o.showAndSlotsBuilder(e, s[t]), o.validatedFormFieldsValues["free-trial-classes"].courseId = $(this).attr("data-courseid"), i.find("[data-topics]").removeClass("input-error").addClass("input-valid"), i.find("[data-topics]").siblings(".input-error-msg").remove(), o.cleverTap("topic_selected")
                    }
                })
            },
            showAndSlotsBuilder: function(e, t) {
                o.validatedFormFieldsValues["free-trial-classes"].isSlotOptionEnabled = !0;
                var a = e.find("[data-time-slots]"),
                    i = '<ul role="tablist" class="tablist">',
                    s = '<div class="slot-time-section"><div class="slot-card-time"><img src="' + CDN + 'byjusweb/slot-icons/morning-slot-icon.svg" width="16" height="16"> Morning</div> <div>',
                    r = '<div class="slot-time-section"><div class="slot-card-time afternoon"><img src="' + CDN + 'byjusweb/slot-icons/afternoon-slot-icon.svg" width="16" height="16"> Afternoon</div> <div>',
                    n = '<div class="slot-time-section"><div class="slot-card-time evening"><img src="' + CDN + 'byjusweb/slot-icons/evening-slot-icon.svg" width="16" height="16"> Evening</div> <div>',
                    d = {
                        today: [],
                        todayHours: [],
                        todayMinutes: [],
                        tomorrow: [],
                        tomorrowHours: [],
                        tomorrowMinutes: [],
                        dayAfter: [],
                        dayAfterHours: [],
                        dayAfterMinutes: []
                    },
                    l = 0,
                    c = 0,
                    f = 0;
                t.slots.forEach(function(e, t) {
                    "today" === e.category && l++, "tomorrow" === e.category && c++, "dayAfter" === e && f++, e.isBogusSlot = !1, d[e.category].push(e), d[e.category + "Hours"].push(parseInt(e.hour)), d[e.category + "Minutes"].push(parseInt(e.minutes))
                });
                var u = {},
                    m = "";
                for (var p in d.today.length ? m = "today" : d.tomorrow.length ? m = "tomorrow" : d.dayAfter.length && (m = "dayAfter"), d[m][0]) u[p] = d[m][0][p];
                var g = [];
                d[m + "Hours"].forEach(function(e) {
                    -1 === g.indexOf(e) && g.push(e)
                });
                var v = [];
                if ("undefined" != typeof fixedSlotsForBogus && fixedSlotsForBogus && fixedSlotsForBogus.afternoon && fixedSlotsForBogus.evening && fixedSlotsForBogus.morning) {
                    function h() {
                        var e = "",
                            t = !0;
                        return fixedSlotsForBogus[u.subCategory].forEach(function(a, i) {
                            -1 === g.indexOf(a) && t && (e = a.toString().length < 2 ? "0" + a : a, t = !1)
                        }), e ? e.toString() : ""
                    }

                    function I() {
                        switch (u.subCategory) {
                            case "morning":
                                return "AM";
                            case "afternoon":
                            case "evening":
                            default:
                                return "PM"
                        }
                    }
                    u && h() ? (u.isBogusSlot = !0, u.slot_group_id = 0xa1b01d4b1c7, u.slot_id = 0xa1b01d4b1c7, u.hour = h(), u.minutes = "00", u.meridiem = I(), "today" === m ? (l++, v = v.concat(o.sortBasedTime(d.today.concat([u])), d.tomorrow, d.dayAfter)) : "tomorrow" === m ? (c++, v = v.concat(d.today, o.sortBasedTime(d.tomorrow.concat([u])), d.dayAfter)) : (f++, v = v.concat(d.today, d.tomorrow, o.sortBasedTime(d.dayAfter.concat([u]))))) : v = t.slots
                } else v = t.slots;
                var T = "",
                    b = "",
                    S = "",
                    y = "",
                    F = "",
                    _ = "",
                    C = "",
                    A = "",
                    L = "",
                    E = "",
                    N = 0,
                    w = 0,
                    O = 0;
                v.forEach(function(e, t) {
                    "today" === e.category ? (0 === w && (T += '<div role="tabpanel" class="tab-pane ' + (O || N ? "" : "active") + '" id="time-slot-0">', i += '<li role="presentation" class="' + (O || N ? "" : "active") + '"><span class="badge"><img src="' + CDN + 'byjusweb/slot-icons/fast-tag-icon.svg" width="8"  height="3">Filling Fast</span><a href="#time-slot-0" aria-controls="home" role="tab" data-toggle="tab">Today, <b>' + e.categoryDate + "</b></a></li>"), "morning" === e.subCategory ? b += o.buildSlotCard(e) : "afternoon" === e.subCategory ? S += o.buildSlotCard(e) : y += o.buildSlotCard(e), w++, l === w && (b && (T += s + b + "</div></div>"), S && (T += r + S + "</div></div>"), y && (T += n + y + "</div></div>"), T += "</div>")) : "tomorrow" === e.category ? (0 === O && (T += '<div role="tabpanel" class="tab-pane ' + (w || N ? "" : "active") + '" id="time-slot-1">', i += '<li role="presentation" class="' + (w || N ? "" : "active") + '"><a href="#time-slot-1" aria-controls="home" role="tab" data-toggle="tab">Tomorrow, <b>' + e.categoryDate + "</b></a></li>"), "morning" === e.subCategory ? F += o.buildSlotCard(e) : "afternoon" === e.subCategory ? _ += o.buildSlotCard(e) : C += o.buildSlotCard(e), O++, c === O && (F && (T += s + F + "</div></div>"), _ && (T += r + _ + "</div></div>"), C && (T += n + C + "</div></div>"), T += "</div>")) : "dayAfter" === e.category ? (0 === N && (T += '<div role="tabpanel" class="tab-pane ' + (w || O ? "" : "active") + '" id="time-slot-2">', i += '<li role="presentation" class="' + (w || O ? "" : "active") + '"><a href="#time-slot-2" aria-controls="home" role="tab" data-toggle="tab"><b>' + e.categoryDate + "</b></a></li>"), "morning" === e.subCategory ? A += o.buildSlotCard(e) : "afternoon" === e.subCategory ? L += o.buildSlotCard(e) : E += o.buildSlotCard(e), N++, f === N && (A && (T += s + A + "</div></div>"), L && (T += r + L + "</div></div>"), E && (T += n + E + "</div></div>"), T += "</div>")) : T = ""
                }), a.html(i + '</ul><div class="tab-content">' + T + "</div>"), a.removeClass("hidden"), a.find("[data-time-slots-title]").removeClass("hidden"), e.find("[data-slot-cta]").on("change", function() {
                    o.validatedFormFieldsValues["free-trial-classes"].slotId = $(this).attr("data-slotid"), o.validatedFormFieldsValues["free-trial-classes"].startTime = $(this).attr("data-start"), o.validatedFormFieldsValues["free-trial-classes"].endTime = $(this).attr("data-end"), a.removeClass("input-error").addClass("input-valid"), a.siblings(".input-error-msg").remove(), o.cleverTap("slot_selected")
                }), a.find('[data-toggle="tab"]').on("click", function(e) {
                    e.preventDefault(), $(this).parent().siblings().removeClass("active"), $(this).parent().addClass("active"), $(this).removeClass("active");
                    var t = $(this).attr("href");
                    $(t).siblings().removeClass("active"), $(t).addClass("active")
                })
            },
            buildSlotCard: function(e) {
                return '<div class="slot-card ' + (e.isBogusSlot ? "full" : "") + '"> <input type="radio" id="trial-slot-card-' + e.slot_id + '" name="slotTime" data-start="' + e.start_time + '" data-end="' + e.end_time + '" data-slotId="' + e.slot_id + '" data-slot-cta ' + (e.isBogusSlot ? "disabled" : "") + '><label for="trial-slot-card-' + e.slot_id + '">' + e.hour + ":" + e.minutes + " " + e.meridiem.toUpperCase() + "</label></div>"
            },
            carouselControlHandler: function(e) {
                var t = $(e).find(".item"),
                    a = $(e).find(".left.carousel-control"),
                    i = $(e).find(".right.carousel-control");
                $(e).on("slid.bs.carousel", function() {
                    0 === o.findIndexOfElements(t, "active") ? (a.addClass("hidden"), i.removeClass("hidden")) : o.findIndexOfElements(t, "active") === t.length - 1 ? (i.addClass("hidden"), a.removeClass("hidden")) : (i.removeClass("hidden"), a.removeClass("hidden"))
                })
            },
            setStates: function(e) {
                $.get(i.apis.allStatesUnderIndia, function(t, a, s) {
                    if (200 === s.status) {
                        var r = '<option value="" disabled="" selected>State</option>';
                        t && "error" != t.statusText && t.forEach(function(e, t) {
                            r += '<option value="' + e.state + '">' + e.state + "</option>"
                        }), e.html(r)
                    } else UTILITIES.addToastMessage(0, i.messages.somethingWentWrong)
                })
            },
            setStatesOffline: function(e) {
                $.get(i.apis.states, function(t, a, s) {
                    if (200 === s.status) {
                        var r = '<option value="" disabled="" selected>State</option>';
                        t && t.state.forEach(function(e, t) {
                            r += '<option value="' + e.stateName + '">' + e.stateName + "</option>"
                        }), e.html(r)
                    } else UTILITIES.addToastMessage(0, i.messages.somethingWentWrong)
                })
            },
            setOfflineClasses: function(e) {
                let t = [{
                    id: "29",
                    displayName: "4th Grade",
                    grade: "4"
                }, {
                    id: "30",
                    displayName: "5th Grade",
                    grade: "5"
                }, {
                    id: "22",
                    displayName: "6th Grade",
                    grade: "6"
                }, {
                    id: "23",
                    displayName: "7th Grade",
                    grade: "7"
                }, {
                    id: "14",
                    displayName: "8th Grade",
                    grade: "8"
                }, {
                    id: "15",
                    displayName: "9th Grade",
                    grade: "9"
                }, {
                    id: "16",
                    displayName: "10th Grade",
                    grade: "10"
                }];
                var a = '<option value="" disabled="" selected>Class</option>';
                t && t.forEach(function(e, t) {
                    a += '<option data-grade="' + e.grade + '" data-grade-card-cta id="trial-grade-' + t + '" value="' + e.id + '" >Class <br />' + e.grade + "</option>"
                }), e.html(a)
            },
            setOfflineCities: function(e) {
                let t = jQuery(".offline-step1-large").find('[name="state-offline"]').val();
                if (t) {
                    var a = n.filter(function(e) {
                            return e.name == t
                        }),
                        s = a[0].id;
                    $.get(i.apis.cityByState + s, function(t, a, i) {
                        var s = '<option value="" disabled="" selected>City</option>';
                        t.city.forEach(function(e, t) {
                            s += '<option value="' + e.cityName + '">' + e.cityName + "</option>"
                        }), s += '<option value="None of the Above">None of the Above</option>', e.html(s)
                    })
                }
            },
            offlineCenterDetails: {},
            setOfflineCenters: function(e) {
                let t = jQuery(".offline-step1-large").find('[name="city-offline"]').val();
                if (t && "None of the Above" != t) $.get(i.apis.centerByCity + t, function(t, a, i) {
                    offlineCenterDetails = t.center;
                    var s = '<option value="" disabled="" selected></option>';
                    t.center.forEach(function(e, t) {
                        s += '<option value="' + e.centerName + '">' + e.centerName + "</option>"
                    }), s += '<option value="None of the Above">None of the Above</option>', e.html(s)
                });
                else if ("None of the Above" == t) {
                    var a = '<option value="" disabled="" selected>Select centre</option>';
                    a += '<option value="None of the Above">None of the Above</option>', e.html(a)
                }
            },
            setOfflineSlots: function(e) {
                let t = jQuery(".offline-step1-large").find('[name="date-offline"]').val();
                const a = new Date(t),
                    i = a.getDay(),
                    s = ["10 AM - 12 PM", "", "12 PM - 2 PM", "12 PM - 2 PM", "12 PM - 2 PM", "12 PM - 2 PM", "12 PM - 4 PM"];
                var r = '<option value="" disabled="" selected></option>';
                1 != i && t && (r += '<option value="' + s[i] + '">' + s[i] + "</option>"), e.html(r)
            },
            redirectionToOnline: function() {
                "None of the Above" == jQuery(".offline-step1-large").find('[name="city-offline"]').val() || "None of the Above" == jQuery(".offline-step1-large").find('[name="center-offline"]').val() ? ("None of the Above" == jQuery(".offline-step1-large").find('[name="city-offline"]').val() && ($('[name="center-offline"]').html(""), $('[name="center-offline"]').attr("disabled", !0), $('[name="center-offline"]').removeClass("input-error"), $('[name="center-offline"]').removeClass("input-valid"), $(".ftc-center-offline-field .input-error-msg").hide()), $("#schedule-online-session-btn-no-center").show(), $("#schedule-offline-session-btn").hide(), $("#ftc-offline-slot-selection").hide(), $(".note-center-unavailable").show()) : ($('[name="center-offline"]').attr("disabled", !1), $("#schedule-online-session-btn-no-center").hide(), $("#schedule-offline-session-btn").show(), $("#ftc-offline-slot-selection").show(), $(".note-center-unavailable").hide())
            },
            registerOfflineSession: function(t, a) {
                var s = o.validatedFormFieldsValues[t],
                    r = o.validatedFormFieldsValues[a],
                    n = offlineCenterDetails.find(e => e.centerName = r["center-offline"]);
                let d = r["date-offline"];
                const l = new Date(d),
                    c = l.getDay(),
                    f = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
                var u = $("form[name=" + t + "]"),
                    m = u.find("[data-submit-button]"),
                    p = {
                        userAttributes: {
                            verifiedMobile: "+91-" + s.mobile,
                            grade: s.grade,
                            name: s.name,
                            profileId: s.profileId,
                            profileTypeOfUser: s.profileType,
                            profileType: "OFFLINE",
                            url: void 0 !== UTILITIES.fixUrl ? UTILITIES.fixUrl(C_URL) : C_URL,
                            userOfflineSessionAttributes: {
                                slotBookedDate: r["date-offline"],
                                slotBookedDay: f[c],
                                slotBookedTime: r["slot-offline"],
                                selectedBTCCenter: r["center-offline"],
                                selectedBTCCenterLink: "",
                                centerId: n.centerId,
                                ABHEmailId: n.abhEmail,
                                ABHName: n.abhName
                            },
                            userLocationAttributes: {
                                adminArea: s.state
                            },
                            session: "offline",
                            Website_URL: void 0 !== UTILITIES.fixUrl ? UTILITIES.fixUrl(C_URL) : C_URL,
                            Platform: void 0 !== navigator.isMobile ? navigator.isMobile ? "website_mobile" : "website_desktop" : "",
                            Lead_Magnet_Type: "HOME_PAGE_FORM",
                            Device_Details: void 0 !== navigator.detectDeviceAgent ? navigator.detectDeviceAgent : "",
                            Device_UserAgent: void 0 !== navigator.userAgent ? navigator.userAgent : ""
                        }
                    },
                    g = JSON.stringify(p);
                $.ajax({
                    type: "POST",
                    url: i.apis.register,
                    contentType: "application/json",
                    dataType: "json",
                    data: g,
                    beforeSend: function(e) {
                        e.setRequestHeader("Authorization", "Bearer " + o.referenceIdForMessageOtp), e.setRequestHeader("signedlogintoken", o.signedLoginToken)
                    },
                    success: function(t, a, i) {
                        m.attr("disabled", !1), m.html("Schedule a Free Class");
                        const s = $("[name='date-offline']").val(),
                            r = s.slice(5, 7),
                            o = s.slice(8),
                            n = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
                        $("#offlineSlotTime").text(e(o) + " " + n[parseFloat(r) - 1] + " at " + $("[name='slot-offline']").val()), $(".doubt-offline-thanku-modal").show(), $(".modal-ftc-step-1").hide()
                    },
                    error: function(e) {
                        m.attr("disabled", !1), m.html("Schedule a Free Class");
                        var t = $("#schedule-offline-session-btn");
                        t.attr("disabled", !1), t.html("Schedule a Free Offline Class"), UTILITIES.addToastMessage(5, e.responseJSON && e.responseJSON.message ? e.responseJSON.message : i.messages.somethingWentWrong), o.cleverTap("registration_form_submit_error")
                    }
                })
            },
            onClickContinueSchedule: function(e) {
                var t = o.validatedFormFieldsValues[e],
                    a = {
                        userAttributes: {
                            verifiedMobile: "+91-" + t.mobile,
                            name: t.name,
                            grade: t.grade,
                            profileId: t.profileId,
                            profileTypeOfUser: t.profileType,
                            profileType: "OFFLINE",
                            userLocationAttributes: {
                                adminArea: t.state
                            },
                            userAdTrackingAttributes: {
                                siteId: t.siteId,
                                adId: t.adId,
                                adsetId: t.adsetId,
                                pid: t.pid,
                                gclId: t.gclId,
                                fbclId: t.fbclId,
                                clientId: t.clientId,
                                utmContent: t.utmContent,
                                utmMedium: t.utmMedium,
                                utmSource: t.utmSource,
                                campaignName: t.campaignName,
                                campaignId: t.campaignId
                            },
                            session: "offline-initiated",
                            url: void 0 !== UTILITIES.fixUrl ? UTILITIES.fixUrl(C_URL) : C_URL,
                            Website_URL: void 0 !== UTILITIES.fixUrl ? UTILITIES.fixUrl(C_URL) : C_URL,
                            Platform: void 0 !== navigator.isMobile ? navigator.isMobile ? "website_mobile" : "website_desktop" : "",
                            Lead_Magnet_Type: "HOME_PAGE_FORM",
                            Device_Details: void 0 !== navigator.detectDeviceAgent ? navigator.detectDeviceAgent : "",
                            Device_UserAgent: void 0 !== navigator.userAgent ? navigator.userAgent : ""
                        }
                    },
                    s = JSON.stringify(a);
                $.ajax({
                    type: "POST",
                    url: i.apis.register,
                    contentType: "application/json",
                    dataType: "json",
                    data: s,
                    beforeSend: function(e) {
                        e.setRequestHeader("Authorization", "Bearer " + o.referenceIdForMessageOtp), e.setRequestHeader("signedlogintoken", o.signedLoginToken)
                    },
                    success: function(e, t, a) {},
                    error: function(e) {
                        UTILITIES.addToastMessage(11, e.responseJSON && e.responseJSON.message ? e.responseJSON.message : i.messages.somethingWentWrong), o.cleverTap("registration_form_submit_error")
                    }
                })
            },
            resetFTCFields: function() {
                var e = $("form[name=free-trial-classes]"),
                    t = e.find("[data-mobile-input]"),
                    a = e.find("[data-send-otp-button]"),
                    i = e.find("[data-otp-validated-img]"),
                    s = e.find("[data-otp-input-field-voice-call-option]");
                a.attr("disabled", !1).removeClass("hidden"), i.addClass("hidden"), t.attr("disabled", !1), t.removeClass("phone-valid"), o.resetOtpCounterTime(), t.siblings(".input-error-msg").remove(), s.addClass("hidden"), o.isPhoneNumberVerified = !1, $("input").removeClass("input-error"), $("select").removeClass("input-error"), $("input").removeClass("input-valid"), $("select").removeClass("input-valid"), jQuery("[data-send-otp-button]").text("Send OTP"), $(".ftc-choose-your-profile").addClass("hidden"), $(".ftc-grade-select").addClass("hidden");
                var r = $("#schedule-online-session-btn-no-center");
                r.attr("disabled", !1), r.html("Schedule a Free Online Class");
                r = $("#schedule-offline-session-btn");
                r.attr("disabled", !1), r.html("Schedule a Free Offline Class"), UTILITIES.removeToastMessage(10), UTILITIES.removeToastMessage(8), UTILITIES.removeToastMessage(11)
            }
        };
    $("form").each(function(e, t) {
        o.validateFormFields($(t).attr("name"), "onInput")
    }), $('[name="center-offline"]').on("change", function() {
        o.redirectionToOnline()
    }), $('[name="city-offline"]').on("change", function() {
        o.redirectionToOnline()
    }), o.setStatesOffline($("[data-state]")), o.setStatesOffline($("[data-state-offline]")), o.setOfflineClasses($("[data-grades-offline]")), $('[name="state-offline"]').on("change", function() {
        o.redirectionToOnline();
        jQuery(".offline-step1-large").find('[name="state-offline"]').val();
        $('[name="city-offline"]').removeClass("input-valid"), $('[name="center-offline"]').html("Select Centre"), $('[name="center-offline"]').attr("disabled", !0), $('[name="center-offline"]').removeClass("input-valid"), $('[name="state"]').val($('[name="state-offline"]').val()), o.setOfflineCities($("[data-cities-offline]")), o.validatedFormFieldsValues["free-trial-classes"].state = $('[name="state-offline"]').val()
    }), $("[name=city-offline]").on("change", function() {
        let e = jQuery(".offline-step1-large").find('[name="city-offline"]').val();
        "None of the Above" != e && $('[name="center-offline"]').attr("disabled", !1), $('[name="center-offline"]').removeClass("input-valid"), o.setOfflineCenters($("[data-centers-offline]"))
    }), $("[name=date-offline]").on("change", function() {
        $('[name="slot-offline"]').removeClass("input-valid"), a && $(".ftc-date-offline-field .input-error-msg").hide();
        let e = jQuery(".offline-step1-large").find('[name="date-offline"]').val();
        const t = new Date(e),
            i = t.getDay();
        1 == i ? ($('[name="slot-offline"]').html(""), $('[name="slot-offline"]').attr("disabled", !0), $('[name="slot-offline"]').removeClass("input-valid"), UTILITIES.addToastMessage(12, "Slots are not available on Monday")) : "" == e ? ($('[name="slot-offline"]').html(""), $('[name="slot-offline"]').attr("disabled", !0), $('[name="slot-offline"]').removeClass("input-valid")) : ($('[name="slot-offline"]').attr("disabled", !1), UTILITIES.removeToastMessage(12)), o.setOfflineSlots($("[data-slots-offline]"))
    }), $('[name="state"]').on("change", function() {
        $('[name="state-offline"]').val(o.validatedFormFieldsValues["free-trial-classes"].state), o.setOfflineCities($("[data-cities-offline]")), o.setOfflineCenters($("[data-centers-offline]"))
    }), $('[name="class-offline"]').on("change", function() {
        $('[name="grade"]').val($('[name="class-offline"]').val()), o.validatedFormFieldsValues["free-trial-classes"].cohortId = $('[name="class-offline"]').val(), o.validatedFormFieldsValues["free-trial-classes"].grade = $('[name="class-offline"] option:selected').text().slice(6)
    }), o.registration("free-trial-classes"), $("#schedule-offline-session-btn").click(function() {
        var e = o.validateFormFields("free-trial-offline-modal", "onDirect");
        if (e) {
            var t = $("#schedule-offline-session-btn");
            t.attr("disabled", !0), t.html("Loading.."), o.registerOfflineSession("free-trial-classes", "free-trial-offline-modal")
        } else a && $(".ftc-date-offline-field .input-error-msg").hide()
    }), $("#schedule-online-session-btn-no-center").click(function() {
        var e = o.validateFormFields("free-trial-classes", "onDirect"),
            t = !1;
        if (null != $('[name="state-offline"]').val() && null != $('[name="city-offline"]').val() && null != $('[name="class-offline"]').val() && (t = !0), e && t && ($("[name='profileId']").val() || $("[name='grade']").val())) {
            var a = $("#schedule-online-session-btn-no-center");
            a.attr("disabled", !0), a.html("Loading..");
            var i = $("form[name=free-trial-classes]"),
                s = i.find("[data-submit-button]");
            s.click()
        } else console.log(e), UTILITIES.addToastMessage(10, "Fill all the fields")
    }), $('[name="viewport"]').attr("content", "width=device-width, initial-scale=1, user-scalable=0");
    const n = [{
        id: 1,
        name: "Andaman and Nicobar Islands",
        code: "AN"
    }, {
        id: 2,
        name: "Andhra Pradesh",
        code: "AP"
    }, {
        id: 3,
        name: "Arunachal Pradesh",
        code: "AR"
    }, {
        id: 4,
        name: "Assam",
        code: "AS"
    }, {
        id: 5,
        name: "Bihar",
        code: "BR"
    }, {
        id: 6,
        name: "Chandigarh",
        code: "CG"
    }, {
        id: 7,
        name: "Chhattisgarh",
        code: "CH"
    }, {
        id: 8,
        name: "Dadra and Nagar Haveli",
        code: "DH"
    }, {
        id: 9,
        name: "Daman and Diu",
        code: "DD"
    }, {
        id: 10,
        name: "Delhi",
        code: "DL"
    }, {
        id: 11,
        name: "Goa",
        code: "GA"
    }, {
        id: 12,
        name: "Gujarat",
        code: "GJ"
    }, {
        id: 13,
        name: "Haryana",
        code: "HR"
    }, {
        id: 14,
        name: "Himachal Pradesh",
        code: "HP"
    }, {
        id: 15,
        name: "Jammu and Kashmir",
        code: "JK"
    }, {
        id: 16,
        name: "Jharkhand",
        code: "JH"
    }, {
        id: 17,
        name: "Karnataka",
        code: "KA"
    }, {
        id: 18,
        name: "Kerala",
        code: "KL"
    }, {
        id: 19,
        name: "Lakshadweep",
        code: "LD"
    }, {
        id: 20,
        name: "Madhya Pradesh",
        code: "MP"
    }, {
        id: 21,
        name: "Maharashtra",
        code: "MH"
    }, {
        id: 22,
        name: "Manipur",
        code: "MN"
    }, {
        id: 23,
        name: "Meghalaya",
        code: "ML"
    }, {
        id: 24,
        name: "Mizoram",
        code: "MZ"
    }, {
        id: 25,
        name: "Nagaland",
        code: "NL"
    }, {
        id: 26,
        name: "Odisha",
        code: "OR"
    }, {
        id: 27,
        name: "Puducherry",
        code: "PY"
    }, {
        id: 28,
        name: "Punjab",
        code: "PB"
    }, {
        id: 29,
        name: "Rajasthan",
        code: "RJ"
    }, {
        id: 30,
        name: "Sikkim",
        code: "SK"
    }, {
        id: 31,
        name: "Tamil Nadu",
        code: "TN"
    }, {
        id: 32,
        name: "Telangana",
        code: "TS"
    }, {
        id: 33,
        name: "Tripura",
        code: "TR"
    }, {
        id: 34,
        name: "Uttar Pradesh",
        code: "UK"
    }, {
        id: 35,
        name: "Uttarakhand",
        code: "UP"
    }, {
        id: 36,
        name: "West Bengal",
        code: "WB"
    }];
    $("form").each(function(e, t) {
        $(t).attr.value = ""
    })
})($);